name: network-transport
version: 0.5
id: network-transport-0.5-KDnsXvuxPCPCOI7ghixo6t
key: network-transport-0.5-KDnsXvuxPCPCOI7ghixo6t
license: BSD3
copyright: Well-Typed LLP
maintainer: Facundo Dom√≠nguez <facundo.dominguez@tweag.io>
stability: experimental
homepage: http://haskell-distributed.github.com
synopsis: Network abstraction layer
description:
    "Network.Transport" is a Network Abstraction Layer which provides
    the following high-level concepts:
    .
    * Nodes in the network are represented by 'EndPoint's. These are
    heavyweight stateful objects.
    .
    * Each 'EndPoint' has an 'EndPointAddress'.
    .
    * Connections can be established from one 'EndPoint' to another
    using the 'EndPointAddress' of the remote end.
    .
    * The 'EndPointAddress' can be serialised and sent over the
    network, where as 'EndPoint's and connections cannot.
    .
    * Connections between 'EndPoint's are unidirectional and lightweight.
    .
    * Outgoing messages are sent via a 'Connection' object that
    represents the sending end of the connection.
    .
    * Incoming messages for /all/ of the incoming connections on
    an 'EndPoint' are collected via a shared receive queue.
    .
    * In addition to incoming messages, 'EndPoint's are notified of
    other 'Event's such as new connections or broken connections.
    .
    This design was heavily influenced by the design of the Common
    Communication Interface
    (<http://www.olcf.ornl.gov/center-projects/common-communication-interface>).
    Important design goals are:
    .
    * Connections should be lightweight: it should be no problem to
    create thousands of connections between endpoints.
    .
    * Error handling is explicit: every function declares as part of
    its type which errors it can return (no exceptions are thrown)
    .
    * Error handling is "abstract": errors that originate from
    implementation specific problems (such as "no more sockets" in
    the TCP implementation) get mapped to generic errors
    ("insufficient resources") at the Transport level.
    .
    This package provides the generic interface only; you will
    probably also want to install at least one transport
    implementation (network-transport-*).
category: Network
author: Duncan Coutts, Nicolas Wu, Edsko de Vries
exposed: True
exposed-modules:
    Network.Transport Network.Transport.Util Network.Transport.Internal
abi: f49ff914e27e15ad20d3f63ea2d55d62
trusted: False
import-dirs: /Users/McGroarty/Documents/College/Internet-Applications/RESTful-Cloud-API/.stack-work/install/x86_64-osx/lts-9.12/8.0.2/lib/x86_64-osx-ghc-8.0.2/network-transport-0.5-KDnsXvuxPCPCOI7ghixo6t
library-dirs: /Users/McGroarty/Documents/College/Internet-Applications/RESTful-Cloud-API/.stack-work/install/x86_64-osx/lts-9.12/8.0.2/lib/x86_64-osx-ghc-8.0.2/network-transport-0.5-KDnsXvuxPCPCOI7ghixo6t
dynamic-library-dirs: /Users/McGroarty/Documents/College/Internet-Applications/RESTful-Cloud-API/.stack-work/install/x86_64-osx/lts-9.12/8.0.2/lib/x86_64-osx-ghc-8.0.2
data-dir: /Users/McGroarty/Documents/College/Internet-Applications/RESTful-Cloud-API/.stack-work/install/x86_64-osx/lts-9.12/8.0.2/share/x86_64-osx-ghc-8.0.2/network-transport-0.5
hs-libraries: HSnetwork-transport-0.5-KDnsXvuxPCPCOI7ghixo6t
depends:
    base-4.9.1.0 binary-0.8.3.0 bytestring-0.10.8.1 deepseq-1.4.2.0
    hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol transformers-0.5.2.0
haddock-interfaces: /Users/McGroarty/Documents/College/Internet-Applications/RESTful-Cloud-API/.stack-work/install/x86_64-osx/lts-9.12/8.0.2/doc/network-transport-0.5/network-transport.haddock
haddock-html: /Users/McGroarty/Documents/College/Internet-Applications/RESTful-Cloud-API/.stack-work/install/x86_64-osx/lts-9.12/8.0.2/doc/network-transport-0.5
